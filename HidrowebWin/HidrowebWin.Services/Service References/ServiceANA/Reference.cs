//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HidrowebWin.Services.ServiceANA {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MRCS/", ConfigurationName="ServiceANA.ServiceANASoap")]
    public interface ServiceANASoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/DadosHidrometeorologicos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable DadosHidrometeorologicos(string codEstacao, string dataInicio, string dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/DadosHidrometeorologicos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> DadosHidrometeorologicosAsync(string codEstacao, string dataInicio, string dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/DadosHidrometeorologicosGerais", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable DadosHidrometeorologicosGerais(string codEstacao, string dataInicio, string dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/DadosHidrometeorologicosGerais", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> DadosHidrometeorologicosGeraisAsync(string codEstacao, string dataInicio, string dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/ListaEstacoesTelemetricas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListaEstacoesTelemetricas(string statusEstacoes, string origem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/ListaEstacoesTelemetricas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacoesTelemetricasAsync(string statusEstacoes, string origem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/IncluirDados_CotaOnline", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable IncluirDados_CotaOnline(string Login, string Senha, string CodEstacao, string DataHora, string Chuva, string Cota, string Vazao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/IncluirDados_CotaOnline", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> IncluirDados_CotaOnlineAsync(string Login, string Senha, string CodEstacao, string DataHora, string Chuva, string Cota, string Vazao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/Excluir_CotaOnline", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Excluir_CotaOnline(string Login, string Senha, string CodEstacao, string DataHora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/Excluir_CotaOnline", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> Excluir_CotaOnlineAsync(string Login, string Senha, string CodEstacao, string DataHora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroInventario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroInventario(string codEstDE, string codEstATE, string tpEst, string nmEst, string nmRio, string codSubBacia, string codBacia, string nmMunicipio, string nmEstado, string sgResp, string sgOper, string telemetrica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroInventario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroInventarioAsync(string codEstDE, string codEstATE, string tpEst, string nmEst, string nmRio, string codSubBacia, string codBacia, string nmMunicipio, string nmEstado, string sgResp, string sgOper, string telemetrica);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroSerieHistorica", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable HidroSerieHistorica(string codEstacao, string dataInicio, string dataFim, string tipoDados, string nivelConsistencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroSerieHistorica", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> HidroSerieHistoricaAsync(string codEstacao, string dataInicio, string dataFim, string tipoDados, string nivelConsistencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroEntidades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroEntidades(string codEntidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroEntidades", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroEntidadesAsync(string codEntidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroBaciaSubBacia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroBaciaSubBacia(string codBacia, string codSubBacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroBaciaSubBacia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroBaciaSubBaciaAsync(string codBacia, string codSubBacia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroRio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroRio(string codRio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroRio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroRioAsync(string codRio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroEstado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroEstado(string codUf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroEstado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroEstadoAsync(string codUf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroMunicipio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet HidroMunicipio(string codMunicipio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MRCS/HidroMunicipio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> HidroMunicipioAsync(string codMunicipio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceANASoapChannel : HidrowebWin.Services.ServiceANA.ServiceANASoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceANASoapClient : System.ServiceModel.ClientBase<HidrowebWin.Services.ServiceANA.ServiceANASoap>, HidrowebWin.Services.ServiceANA.ServiceANASoap {
        
        public ServiceANASoapClient() {
        }
        
        public ServiceANASoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceANASoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceANASoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceANASoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable DadosHidrometeorologicos(string codEstacao, string dataInicio, string dataFim) {
            return base.Channel.DadosHidrometeorologicos(codEstacao, dataInicio, dataFim);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> DadosHidrometeorologicosAsync(string codEstacao, string dataInicio, string dataFim) {
            return base.Channel.DadosHidrometeorologicosAsync(codEstacao, dataInicio, dataFim);
        }
        
        public System.Data.DataTable DadosHidrometeorologicosGerais(string codEstacao, string dataInicio, string dataFim) {
            return base.Channel.DadosHidrometeorologicosGerais(codEstacao, dataInicio, dataFim);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> DadosHidrometeorologicosGeraisAsync(string codEstacao, string dataInicio, string dataFim) {
            return base.Channel.DadosHidrometeorologicosGeraisAsync(codEstacao, dataInicio, dataFim);
        }
        
        public System.Data.DataSet ListaEstacoesTelemetricas(string statusEstacoes, string origem) {
            return base.Channel.ListaEstacoesTelemetricas(statusEstacoes, origem);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacoesTelemetricasAsync(string statusEstacoes, string origem) {
            return base.Channel.ListaEstacoesTelemetricasAsync(statusEstacoes, origem);
        }
        
        public System.Data.DataTable IncluirDados_CotaOnline(string Login, string Senha, string CodEstacao, string DataHora, string Chuva, string Cota, string Vazao) {
            return base.Channel.IncluirDados_CotaOnline(Login, Senha, CodEstacao, DataHora, Chuva, Cota, Vazao);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> IncluirDados_CotaOnlineAsync(string Login, string Senha, string CodEstacao, string DataHora, string Chuva, string Cota, string Vazao) {
            return base.Channel.IncluirDados_CotaOnlineAsync(Login, Senha, CodEstacao, DataHora, Chuva, Cota, Vazao);
        }
        
        public System.Data.DataTable Excluir_CotaOnline(string Login, string Senha, string CodEstacao, string DataHora) {
            return base.Channel.Excluir_CotaOnline(Login, Senha, CodEstacao, DataHora);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> Excluir_CotaOnlineAsync(string Login, string Senha, string CodEstacao, string DataHora) {
            return base.Channel.Excluir_CotaOnlineAsync(Login, Senha, CodEstacao, DataHora);
        }
        
        public System.Data.DataSet HidroInventario(string codEstDE, string codEstATE, string tpEst, string nmEst, string nmRio, string codSubBacia, string codBacia, string nmMunicipio, string nmEstado, string sgResp, string sgOper, string telemetrica) {
            return base.Channel.HidroInventario(codEstDE, codEstATE, tpEst, nmEst, nmRio, codSubBacia, codBacia, nmMunicipio, nmEstado, sgResp, sgOper, telemetrica);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroInventarioAsync(string codEstDE, string codEstATE, string tpEst, string nmEst, string nmRio, string codSubBacia, string codBacia, string nmMunicipio, string nmEstado, string sgResp, string sgOper, string telemetrica) {
            return base.Channel.HidroInventarioAsync(codEstDE, codEstATE, tpEst, nmEst, nmRio, codSubBacia, codBacia, nmMunicipio, nmEstado, sgResp, sgOper, telemetrica);
        }
        
        public System.Data.DataTable HidroSerieHistorica(string codEstacao, string dataInicio, string dataFim, string tipoDados, string nivelConsistencia) {
            return base.Channel.HidroSerieHistorica(codEstacao, dataInicio, dataFim, tipoDados, nivelConsistencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> HidroSerieHistoricaAsync(string codEstacao, string dataInicio, string dataFim, string tipoDados, string nivelConsistencia) {
            return base.Channel.HidroSerieHistoricaAsync(codEstacao, dataInicio, dataFim, tipoDados, nivelConsistencia);
        }
        
        public System.Data.DataSet HidroEntidades(string codEntidade) {
            return base.Channel.HidroEntidades(codEntidade);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroEntidadesAsync(string codEntidade) {
            return base.Channel.HidroEntidadesAsync(codEntidade);
        }
        
        public System.Data.DataSet HidroBaciaSubBacia(string codBacia, string codSubBacia) {
            return base.Channel.HidroBaciaSubBacia(codBacia, codSubBacia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroBaciaSubBaciaAsync(string codBacia, string codSubBacia) {
            return base.Channel.HidroBaciaSubBaciaAsync(codBacia, codSubBacia);
        }
        
        public System.Data.DataSet HidroRio(string codRio) {
            return base.Channel.HidroRio(codRio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroRioAsync(string codRio) {
            return base.Channel.HidroRioAsync(codRio);
        }
        
        public System.Data.DataSet HidroEstado(string codUf) {
            return base.Channel.HidroEstado(codUf);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroEstadoAsync(string codUf) {
            return base.Channel.HidroEstadoAsync(codUf);
        }
        
        public System.Data.DataSet HidroMunicipio(string codMunicipio) {
            return base.Channel.HidroMunicipio(codMunicipio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> HidroMunicipioAsync(string codMunicipio) {
            return base.Channel.HidroMunicipioAsync(codMunicipio);
        }
    }
}
